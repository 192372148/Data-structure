11.
	Given an unsorted array arr[] with both positive and negative elements, the task 
is to find the smallest positive number missing from the array.
Input:  arr[] = {2, 3, 7, 6, 8, -1, -10, 15}
Output: 1
Input:  arr[] = { 2, 3, -7, 6, 8, 1, -10, 15 }
Output: 4
Input: arr[] = {1, 1, 0, -1, -2}
Output: 2

code :

#include <stdio.h>
int findMissingNumber(int arr[], int n) {
    int i;
    for (i = 0; i < n; i++) {
        if (arr[i] <= 0 || arr[i] > n)
            continue;
        int pos = arr[i] - 1;
        if (arr[pos] != arr[i]) {
            int temp = arr[pos];
            arr[pos] = arr[i];
            arr[i] = temp;
            i--;
        }
    }
    for (i = 0; i < n; i++) {
        if (arr[i] != i + 1)
            return i + 1;
    }
    return n + 1;
}
int main() {
    int arr[] = {2, 3, -7, 6, 8, 1, -10, 15};
    int n = sizeof(arr) / sizeof(arr[0]);
    int missingNumber = findMissingNumber(arr, n);
    printf("The smallest positive number missing from the array is: %d\n", missingNumber);
    return 0;
} 

output :

The smallest positive number missing from the array is: 4
